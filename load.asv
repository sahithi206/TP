% Define load and irradiance data
load_data = [0.4526, 0.4526, 0.4526, 0.4715, 0.4715, 0.4715, ...
             0.6552, 0.6552, 0.6552, 0.4919, 0.4919, 0.4919];
irradiance_data = [1.14, 2.3, 3.78, 5.08, 5.75, 6.27, ...
                   6.06, 5.25, 3.85, 2.51, 1.17, 0.9];

% Convert load data to MW
load_data = load_data * 40; 

% Define number of states
num_load_states = 10;
num_irrad_states = 9;

% Compute actual min and max of load data
load_min = min(load_data);
load_max = max(load_data);

% Define dynamic bin edges based on min-max
interval_width =0.001;
disp(interval_width);
% Assign Load States
load_states = cell(size(num_load_states)); % Use cell array to store intervals

for i = 1:num_load_states
          
            load_states{i} = [load_min,load_min+1];
            load_min=load_min+interval_width+1;
end

disp(load_states);
irrad_min = min(irradiance_data);
irrad_max = max(irradiance_data);
irrad_bins = linspace(irrad_min, irrad_max, num_irrad_states + 1);

% Assign Irradiance States
irradiance_states = zeros(size(irradiance_data));
for i = 1:length(irradiance_data)
    for j = 1:num_irrad_states
        if irradiance_data(i) >= irrad_bins(j) && irradiance_data(i) < irrad_bins(j+1)
            irradiance_states(i) = (irrad_bins(j) + irrad_bins(j+1)) / 2;
            break;
        end
    end
end

% Display results
disp('Load states (MW):');
disp(load_states');
disp('Irradiance states:');
disp(irradiance_states');
